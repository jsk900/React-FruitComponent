{"version":3,"sources":["components/Header.js","components/ColourButton.js","components/DeleteButton.js","components/Fruit.js","components/DeleteAll.js","components/ResetAll.js","components/Footer.js","fruitData.js","index.js"],"names":["Header","ColourButton","props","state","colour","handleClick","bind","min","max","Math","ceil","floor","random","coloursArr","result","this","getRandomIntInclusive","setState","className","onClick","style","backgroundColor","name","Component","DeleteButton","Fruit","src","fruit","alt","DeleteAll","deleteAll","ResetAll","reset","Footer","fruitData","id","App","index","fruitDataCopy","splice","fruitItems","map","key","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.034d82fd.chunk.js","sourcesContent":["import React from 'react';\n\n//Display a header component\nexport const Header = () => {\n  return (\n    <>\n      <header>\n        <h1>Coloured Fruits</h1>\n      </header>\n    </>\n  );\n};\n","import React, { Component } from 'react';\n\n// Button class component accepting props from our Fruit component.App.\n// Here we set up state for the colour of the button.\n// We set up binding for our click handler.\nexport class ColourButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { colour: this.props.colour };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //This function returns a random number\n  getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    let number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return number;\n  }\n\n  // The click handler calls our random number generator which will give us\n  // our random colour to change the state with setState.\n  handleClick() {\n    const coloursArr = [\n      '#e5ccff',\n      '#660000',\n      '#ff0000',\n      '#ff8000',\n      '#ffb266',\n      '#b2ff66',\n      '#ff66b2',\n      '#c0c0c0',\n      '#404040',\n      '#ff007f',\n      '#3399ff',\n      '#006600',\n      '#cccc00'\n    ];\n    let result = this.getRandomIntInclusive(0, 12);\n    this.setState(() => ({\n      colour: coloursArr[result]\n    }));\n  }\n\n  render() {\n    return (\n      <button\n        className=\"colourButton\"\n        onClick={this.handleClick}\n        style={{ backgroundColor: this.state.colour }}\n      >\n        {this.props.name}\n      </button>\n    );\n  }\n}\n","import React from 'react';\n\n// Button Function component accepting props.name from our Fruit component\n// and calling a delete fruit function from index.js\nexport const DeleteButton = props => {\n  return (\n    <button className=\"deleteButton\" onClick={props.handleClick}>\n      {props.name}\n    </button>\n  );\n};\n","import React from 'react';\nimport { ColourButton } from './ColourButton';\nimport { DeleteButton } from './DeleteButton';\n\n// Fruit Functional component passing props down to our buttons.\n// Including the delete function passed down as props from index.js\n// This needs to be passed down to our delete button component.\nexport const Fruit = props => {\n  return (\n    <>\n      <div className=\"fruitLine\">\n        <img src={props.fruit} alt={props.name} />\n        <ColourButton name=\"Change Colour\" colour={props.colour} />\n        <DeleteButton name=\"Delete fruit\" handleClick={props.handleClick} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\n// Delete all button. Calls deleteAll function in index.js\nexport const DeleteAll = props => {\n  return (\n    <button className=\"deleteAll\" onClick={props.deleteAll}>\n      Delete All\n    </button>\n  );\n};\n","import React from 'react';\n\n// Reset all button. Calls resetAll function in index.js\nexport const ResetAll = props => {\n  return (\n    <button className=\"resetAll\" onClick={props.reset}>\n      Reset All\n    </button>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => (\n  <footer>\n    <p>\n      <span>{'\\u00A9'}</span>\n      {'\\u00A0'}\n      {'\\u00A0'} Joseph Urbina {'\\u00A0'}\n      {'\\u00A0'}2019\n    </p>\n  </footer>\n);\n","// Fruit object array\nexport const fruitData = [\n  {\n    id: 1,\n    name: 'Banana',\n    fruit: '../icons/banana.png',\n    colour: '#ffdb6f'\n  },\n\n  {\n    id: 2,\n    name: 'Apple',\n    fruit: '../icons/apple.png',\n    colour: '#f44339'\n  },\n  {\n    id: 3,\n    name: 'Pear',\n    fruit: '../icons/pear.png',\n    colour: '#ffc539'\n  },\n  {\n    id: 4,\n    name: 'Mango',\n    fruit: '../icons/mango.png',\n    colour: '#fc713a'\n  },\n  {\n    id: 5,\n    name: 'Kiwi',\n    fruit: '../icons/kiwi.png',\n    colour: '#8bc34a'\n  }\n];\n","// React\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\n\n// Components\nimport { Header } from './components/Header';\nimport { Fruit } from './components/Fruit';\nimport { DeleteAll } from './components/DeleteAll';\nimport { ResetAll } from './components/ResetAll';\nimport { Footer } from './components/Footer';\n\n//Miscellaneous\nimport { fruitData } from './fruitData';\nimport './css/main.css';\n\n// Main App. Get individual fruits from our fruitData array and pass down as props to\n// our Fruit component.\n// When passing props down to our Fruit component we are also passing down\n// a function to the Fruit component to get to the delete button component.\n// Because our fruitData is what may change, we put this in our state.\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { fruitData: fruitData };\n  }\n\n  // Delete Button. Delete a chosen fruit.\n  handleClick = index => {\n    let fruitDataCopy = [...this.state.fruitData];\n    fruitDataCopy.splice(index, 1);\n    this.setState({ fruitData: fruitDataCopy });\n  };\n\n  // Reset Button. Puts back our original fruits\n  reset = () => {\n    this.setState({ fruitData: fruitData });\n  };\n\n  // Delete All Button. Kills all the fruit components from the DOM.\n  deleteAll = () => {\n    let fruitDataCopy = [...this.state.fruitData];\n    fruitDataCopy = [];\n    this.setState({ fruitData: fruitDataCopy });\n  };\n\n  // Loop around our fruits array(fruitData) and render individual fruit components\n  render() {\n    const fruitItems = this.state.fruitData.map((fruit, index) => (\n      <Fruit\n        colour={fruit.colour}\n        key={fruit.id}\n        name={fruit.name}\n        fruit={fruit.fruit}\n        id={fruit.id}\n        handleClick={this.handleClick.bind(this, index)}\n      />\n    ));\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <div className=\"buttons\">\n          <DeleteAll deleteAll={this.deleteAll.bind(this)} />\n          <ResetAll reset={this.reset.bind(this)} />\n        </div>\n        {fruitItems}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}